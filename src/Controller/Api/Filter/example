<?php

namespace App\Controller\Api\Filter;

use App\Repository\CategoryRepository;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\JsonResponse;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Security\Core\User\UserInterface;
use Symfony\Component\Security\Http\Attribute\CurrentUser;

class UserProfileFilterController extends AbstractController
{
    private readonly CategoryRepository $categoryRepository;

    public function __construct(CategoryRepository $categoryRepository)
    {
        $this->categoryRepository = $categoryRepository;
    }

    public function __invoke(#[CurrentUser] ?UserInterface $user): JsonResponse
    {
        if (!$user) {
            return $this->json(['message' => 'Unauthorized'], Response::HTTP_UNAUTHORIZED);
        }

        if (!$user->getIsActive() || !$user->getIsApproved()) {
            return $this->json(['message' => 'Unauthorized'], Response::HTTP_UNAUTHORIZED);
        }

        return $this->json([
            'id' => $user->getId(),
            'name' => $user->getName(),
            'surname' => $user->getSurname(),
            'patronym' => $user->getPatronym(),
            'email' => $user->getEmail(),
            'phone' => $user->getPhone(),
            'dateOfBirth' => $user->getDateOfBirth(),
            'aboutMe' => $user->getAboutMe(),
            'image' => $user->getImage(),
            'category' => $this->categoryRepository->findCategoryByStudentId($user->getId()),
        ], 200, ['groups' => 'students:read']);
    }
}
